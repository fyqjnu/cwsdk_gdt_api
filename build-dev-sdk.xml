<?xml version="1.0" ?>
<project name="cp" default="release" basedir=".">

	<!-- Load the properties files -->
	<property file="local-dev.properties" />

	<!-- Input directories -->
	<property name="src-dir" value="src" />

	<!-- Output directories -->    
	<property name="out-dir" value="${target-root}/tmp" />
	<property name="out-dir-classes" value="${out-dir}/classes" />

	<!-- Clean directories -->
	<target name="clean-dirs">
		<echo>clean-dirs..................</echo>
		<delete dir="${target-root}" />
	</target>
	

	<!-- Create directories if not exist -->
	<target name="mkdirs" depends="clean-dirs">
		<echo>mkdirs.................</echo>
		<delete dir="${target-root}" />
		<mkdir dir="${out-dir}" />
		<mkdir dir="${out-dir-classes}" />
		<mkdir dir="${target-root}/${new-package-path}" />
	</target>
	<!-- copy the source files to target directory -->
	<target name="copy" depends="mkdirs">
		<copydir dest="${target-root}/${new-package-path}" src="${src-dir}/${old-package-path}">
		</copydir>
	</target>

	<target name="update-package" depends="copy">
		
		          <java jar="packtool.jar" fork="true" failonerror="true">
		                 <arg value="2"/>
		                 <arg value="${target-root}/${new-package-path}/util/Lg.java"/>
		                 <arg value='^\s*public static final boolean d =.*$'/>
		                 <arg value="    public static final boolean d = false;"/>
		             </java>
		
		
			<java jar="tool1.1.jar" fork="true" failonerror="true">
				<arg value="${target-root}" />
				<arg value="${old-package-name}" />
				<arg value="${new-package-name}" />
				
				<arg value="${old-manager-name}" />
				<arg value="${new-manager-name}" />
				
				<arg value="${old-activity-name}" />
				<arg value="${new-activity-name}" />
				
				<arg value=" " />
				<arg value=" " />
				
			    <arg value="${old-receiver-name}" />
				<arg value="${new-receiver-name}" />
				
				<arg value=" "/>
				<arg value=" "/>
			</java>
		</target>

	<!-- Compiling the java files -->
	<target name="compile" depends="update-package">
		<echo>Compiling the java files.................</echo>
		<javac encoding="utf-8" source="1.6" target="1.6" debug="true" srcdir="${target-root}" destdir="${out-dir-classes}" classpath="${out-dir-classes}" bootclasspath="${android-jar}">
			<classpath>
				<fileset dir="libs" includes="*.jar" />
			</classpath>
		</javac>
		<delete>
			<fileset dir="${out-dir-classes}/${new-package-path}" includes="Run*.class" />
		</delete>
		<delete>
			<fileset dir="${out-dir-classes}/${new-package-path}" includes="Empty*.class" />
		</delete>
		<delete>
			<fileset dir="${out-dir-classes}/${new-package-path}" includes="I.class" />
		</delete>
	</target>

	<target name="proguard" depends="compile">
		<jar basedir="${out-dir-classes}" destfile="temp.jar" />
		<java jar="${proguard-dir}/lib/proguard.jar" fork="true" failonerror="true">
			<jvmarg value="-Dmaximum.inlined.code.length=32" />
			<arg value="-injars temp.jar" />
			<arg value="-outjars sdk/temp-${sdk-version}.jar" />

			<arg value="-dontwarn" />
			<arg value="-dontpreverify" />
			<arg value="-dontoptimize" />
			<arg value="-dontusemixedcaseclassnames" />
			<arg value="-allowaccessmodification" />
			<arg value="-dontskipnonpubliclibraryclassmembers" />
			<arg value="-dontskipnonpubliclibraryclasses" />
			<arg value="-libraryjars ${android-jar}" />
			<!--arg value="-libraryjars libs/${kode-jar}" /-->
			
			<!-- 
			 -->
			<arg value="-libraryjars libs/GDTUnionSDK.4.20.580.min.jar" />
				<arg value="-libraryjars libs/SDK_32.jar" />
				<!-- 
				<arg value="-libraryjars libs/SDK_11.jar" />
				<arg value="-libraryjars libs/wgldxs1.39_common_pub_obe.jar" />
				 -->
			
			<arg value="-optimizationpasses 7" />
			<arg value="-verbose" />
			
			<!--
			<arg value="-keepattributes SourceFile,LineNumberTalbe" />
			-->

			<arg value="-keep public class * extends android.app.Activity" />
			<!-- 
			<arg value="-keep public class * extends android.app.Service" />
			<arg value="-keep public class * extends android.content.BroadcastReceiver" />
			<arg value="-keep public class * extends android.content.ContentProvider" />
			<arg value="-keep public class * extends android.preference.Preference" />
			<arg value="-keep public class * extends android.app.Application" />
			 -->

			<arg value="-keepclasseswithmembers class * {   native &lt;methods&gt;;	}" />

			<arg value="-keepclasseswithmembernames class * {    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);	}" />

			<arg value="-keepclasseswithmembernames class * {	    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);			}" />

			<arg value="-keepclassmembers enum * {				    public static **[] values();				    public static ** valueOf(java.lang.String);			}" />

			<!-- 
			<arg value="-keep class ${new-package-name}.${new-manager-name} {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
			
			<arg value="-keep class ${new-package-name}.Listener {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
			<arg value="-keep class ${new-package-name}.I {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
			 -->
			<arg value="-keep class ${new-package-name}.${new-manager-name} {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
			<arg value="-keep class ${new-package-name}.API2CSJ {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
			<arg value="-keep class ${new-package-name}.CSJ2API {                &lt;fields&gt; ;		   &lt;methods&gt; ;	} " />
	
			<arg value="-keep public class dsmf.out.hotfix.ectocyst.SDK{*;}" />
			
			<arg value="-keep public class saifn.ubh.of.wqr.nmfi.Entrance{*;}" />
			
		</java>
		<delete file="temp.jar" />
		<delete dir="${out-dir-classes}"/>
		<mkdir dir="${out-dir-classes}" />
		<!--unjar dest="${out-dir-classes}" src="libs/${kode-jar}"/-->
		<unjar src="sdk/temp-${sdk-version}.jar" dest="${out-dir-classes}"/>
		<!-- 
	 -->
				<unjar src="libs/GDTUnionSDK.4.20.580.min.jar" dest="${out-dir-classes}"/>
				<unjar src="libs/SDK_32.jar" dest="${out-dir-classes}"/>
				<!-- 
				<unjar src="libs/SDK_11.jar" dest="${out-dir-classes}"/>
				<unjar src="libs/wgldxs1.39_common_pub_obe.jar" dest="${out-dir-classes}"/>
				 -->
		
		<jar destfile="sdk/${project-name}_${new-package-name}_${sdk-version}.jar" basedir="${out-dir-classes}"/>
		<delete file="sdk/temp-${sdk-version}.jar" />
		<delete dir="${target-root}" />

	</target>
	
	<target name="pack" depends="compile">
	    <unjar src="libs/GDTUnionSDK.4.20.580.min.jar" dest="${out-dir-classes}"/>
	    <jar destfile="sdk/${project-name}_${new-package-name}_${sdk-version}.jar" basedir="${out-dir-classes}"/>
	</target>
	
	<target name="todex" depends="compile">
		    <exec executable="${dx}"
				failonerror="true">
		        <arg value="--dex"/>
		        <arg value="--output=d:/workspace_kelper/Cp_Dex/sdk/upgratetest.jar"/>
		        <arg path="sdk/${project-name}_${new-package-name}_${sdk-version}.jar"/>
		    </exec>
		</target>

	<target name="release" depends="proguard">
	</target>
</project>